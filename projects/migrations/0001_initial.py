# Generated by Django 2.1.5 on 2019-02-16 10:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('studyguide', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=100)),
                ('NumStudentsMin', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('NumStudentsMax', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('GeneralDescription', models.TextField(help_text='General description of the project. Limited markdown is supported. You can style [links](http://master.ele.tue.nl/), **bold** and _italics_')),
                ('StudentsTaskDescription', models.TextField(help_text='Task description of the project. Limited markdown is supported. You can style [links](http://master.ele.tue.nl/), **bold** and _italics_')),
                ('SiteUrl', models.URLField(blank=True, help_text='Link to site of the group or other place with more information', null=True)),
                ('Status', models.IntegerField(choices=[(1, 'Draft, awaiting completion by assistant'), (2, 'Draft, awaiting approval by responsible staff'), (3, 'Active project')], default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('Progress', models.IntegerField(blank=True, choices=[(1, 'Project is being executed'), (2, 'Project is finished'), (3, 'Project is reserved')], default=None, null=True)),
                ('StartDate', models.DateField(blank=True, help_text='Set this to the date from when students can view this project. Including this date.', null=True)),
                ('EndDate', models.DateField(blank=True, help_text='Set this to the date till when students can view this project. Visible including this date.', null=True)),
                ('Type', models.CharField(choices=[('graduation', 'Graduation project'), ('internship', 'Internship project'), ('both', 'Graduation or internship project')], default='graduation', help_text='Choose the type of this project, like internship or graduation.', max_length=16)),
                ('Apply', models.CharField(choices=[('system', 'Using master marketplace'), ('supervisor', 'By contacting supervisor')], default='system', help_text="Choose whether students can apply to this project using an 'apply' button on the master marketplace or only by directly contacting the supervisor", max_length=16)),
                ('TimeStamp', models.DateTimeField(auto_now=True, null=True)),
                ('Created', models.DateTimeField(auto_now_add=True, null=True)),
                ('Assistants', models.ManyToManyField(blank=True, related_name='projects', to=settings.AUTH_USER_MODEL)),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studyguide.CapacityGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Caption', models.CharField(blank=True, max_length=200, null=True)),
                ('OriginalName', models.CharField(blank=True, max_length=200, null=True)),
                ('File', models.FileField(default=None, upload_to=projects.models.ProjectFile.make_upload_path)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Caption', models.CharField(blank=True, max_length=200, null=True)),
                ('OriginalName', models.CharField(blank=True, max_length=200, null=True)),
                ('File', models.ImageField(default=None, upload_to=projects.models.ProjectFile.make_upload_path)),
                ('Project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50, unique=True)),
                ('Color', models.CharField(choices=[('bg-lime', 'lime'), ('bg-green', 'green'), ('bg-emerald', 'emerald'), ('bg-teal', 'teal'), ('bg-blue', 'blue'), ('bg-cobalt', 'cobalt'), ('bg-indigo', 'indigo'), ('bg-violet', 'violet'), ('bg-magenta', 'magenta'), ('bg-crimson', 'crimson'), ('bg-red', 'red'), ('bg-orange', 'orange'), ('bg-amber', 'amber'), ('bg-yellow', 'yellow'), ('bg-brown', 'brown'), ('bg-olive', 'olive'), ('bg-steel', 'steel'), ('bg-mauve', 'mauve'), ('bg-taupe', 'taupe'), ('bg-gray', 'gray')], max_length=20)),
                ('Active', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='Labels',
            field=models.ManyToManyField(blank=True, help_text='Assign category labels to this project.', related_name='projects', to='projects.ProjectLabel'),
        ),
        migrations.AddField(
            model_name='project',
            name='Program',
            field=models.ManyToManyField(blank=True, help_text='Required specialization path(s) to do this project.', related_name='restrictedprojects', to='studyguide.MasterProgram'),
        ),
        migrations.AddField(
            model_name='project',
            name='RequiredCourses',
            field=models.ManyToManyField(blank=True, help_text='Courses recommended to be able to do this project. Leave the field blank if there are no recommended courses.', related_name='projects', to='studyguide.Course'),
        ),
        migrations.AddField(
            model_name='project',
            name='ResponsibleStaff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projectsresponsible', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='SecondaryGroup',
            field=models.ManyToManyField(blank=True, help_text='One or more secondary capacity groups. Use if a project is shared with multiple capacity groups.', related_name='secondarygroupprojects', to='studyguide.CapacityGroup'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='Project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL),
        ),
    ]
